---
import AuthWidget from "../components/AuthWidget";
import SubscribeForm from "../components/SubscribeForm";
import { isAccessTokenValid, getUserNameFromToken } from "../utils/helpers";
const { title = "" } = Astro.props;

const { cookies } = Astro;

const accessToken = cookies.get("sb-access-token");
const tokenValue = accessToken?.value || "";
const isTokenValid = await isAccessTokenValid(tokenValue);
const userName = await getUserNameFromToken(tokenValue);

console.log("Layout isTokenValid:", isTokenValid);
console.log("Layout userName:", userName);
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>My Daily Feed</title>
	</head>
	<body class="bg-gray-50 min-h-screen flex flex-col">
		<header class="bg-white shadow-md py-4 px-2 sm:py-6 sm:px-4 flex flex-col items-center border-b border-gray-200 w-full">
			<a href="/" class="block w-fit mx-auto">
			<h2 class="text-2xl sm:text-3xl font-extrabold text-indigo-700 tracking-tight mb-2 text-center hover:underline cursor-pointer">
				My Daily Feed {title ? `- ${title}` : ""}
			</h2>
			</a>
			<h3 class="text-lg sm:text-xl text-gray-700 mb-4 text-center">Your personalized news and updates</h3>
			<!-- client:load ensures React Hydrates only on the client -->
			<AuthWidget client:load isTokenValid={isTokenValid} userName={userName} />
		</header>
		<main class="flex-1 w-full max-w-full sm:max-w-4xl mx-auto px-2 sm:px-4 py-4 sm:py-8">
			<slot />
		</main>
		{Astro.url.pathname !== "/thank-you" && (
		<footer class="bg-white border-t border-gray-200 py-4 px-2 sm:py-6 sm:px-4 flex flex-col items-center w-full">
			<SubscribeForm client:load />
		</footer>
		)}
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
